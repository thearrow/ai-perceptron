Jacob Klingler
klingler.45@osu.edu
klinglej

AI Homework #4 - Single Perceptron

COMPILE:
    (in klinglerHW4 folder):
    javac *.java

RUN:
    TRAIN:
        java Main train train.txt
        ...where train.txt is training data

    TEST:
        java Main test test.txt
        ...where test.txt is testing data


ABOUT:
    Program implements a single perceptron with N inputs and a
    logistic activation function. A bias term (input always = 1)
    is included in the perceptron. Input files should be in the
    format given in the assignment examples:

    3
    0.53,0.75,0.43,0
    0.8,0.74,0.46,1
    0.55,0.61,0.69,0
    ...etc...

    The first line is ignored, number of inputs/weights is determined
    lazily by the first line of data.
    After the neuron is trained it is saved to neuron.dat.
    The neuron is then loaded from this file for testing.

RESULTS:
    I tested the program using the sample training/test data
    given in the assignment.
    Output from the neuron is rounded to the nearest integer (0|1).

    I chose a learning rate of 0.3, and the training converged after
    410 iterations (82053 individual examples). Weights Learned:
    [37.93741179010104, 14.376999327661963, 22.58516592171113, -46.60419477106214]
    ...Where -46.604... corresponds to the bias weight.

    2)  After training the neuron on the example training data,
        it was able to achieve the following accuracies:
        Training Set: 200/200 examples (100%)
        Testing Set: 48/52 examples (92.3%)

    3)  Attempting to train the neuron on the example TESTING data
        leads to a non-terminating training loop. The neuron can
        never reach 100% accuracy, due to the fact that the testing
        set probably contains a few points (I would guess ~4 from
        the results of part 2) that cannot be generated by the type
        of function a single neuron can learn.


